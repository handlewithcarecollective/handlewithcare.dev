<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Handle with Care Blog - Recent Posts</title>
  <author>
    <name>Handle with Care Collective</name>
    <uri>https://handlewithcare.dev</uri>
  </author>
  <icon>https://handlewithcare.dev/favicon.ico</icon>
  <id>https://handlewithcare.dev/blog/recent.atom</id>
  <updated>2025-02-22T05:00:00.000Z</updated>
  <link href="https://handlewithcare.dev/" />
  <link href="https://handlewithcare.dev/blog/recent.atom" rel="self" />
  <entry>
    <title type="text">Why I rebuilt ProseMirror’s renderer in React</title>
    <id>https://handlewithcare.dev/blog/why_i_rebuilt_prosemirror_view/</id>
    <updated>2025-02-06T05:00:00.000Z</updated>
    <published>2025-02-06T05:00:00.000Z</published>
    <link href="https://handlewithcare.dev/blog/why_i_rebuilt_prosemirror_view/" />
    <author>
      <name>Shane Friedman</name>
      <uri>https://handlewithcare.dev/#Shane Friedman</uri>
    </author>
    <summary type="text">For the past year and a half, I’ve been re-writing the renderer for ProseMirror, the popular rich text editing library. This new renderer has finally been marked as stable and published as part of @handlewithcare/react-prosemirror, a library that integrates React and ProseMirror. Here’s a very deep dive into the journey I took, and why it led me where it did!</summary>
    <content type="html" xml:lang="en" xml:base="http://handlewithcare.dev/blog/why_i_rebuilt_prosemirror_view/">
      &lt;main class=&quot;mx-auto mt-20 flex max-w-prose flex-col gap-4&quot;&gt;&lt;header class=&quot;flex flex-col gap-8&quot;&gt;&lt;a class=&quot;font-bold underline&quot; href=&quot;/blog&quot;&gt;Back to all writing&lt;/a&gt;&lt;p&gt;Feb. 6, 2025&lt;/p&gt;&lt;h2 class=&quot;font-headings text-center text-2xl leading-[1] font-extralight uppercase md:text-4xl&quot;&gt;Why I rebuilt ProseMirror’s renderer in React&lt;/h2&gt;&lt;p class=&quot;text-base font-bold md:text-xl&quot;&gt;by &lt;!-- --&gt;Shane Friedman&lt;/p&gt;&lt;p&gt;Originally published to&lt;!-- --&gt; &lt;a class=&quot;font-bold underline&quot; href=&quot;https://smoores.dev/post/why_i_rebuilt_prosemirror_view&quot;&gt;smoores.dev&lt;/a&gt;&lt;/p&gt;&lt;/header&gt;&lt;section id=&quot;intro&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;For almost five years&lt;/span&gt;, I worked on the New York Times’ rich text editor, Oak. It’s used by over a thousand journalists at the Times to author nearly every story that’s published to the site. It needed to support Google Docs-style collaborative editing and a “what you see is what you get” (WYSIWYG) experience, so that journalists could work together and see how their writing was actually going to appear to readers.&lt;/p&gt;&lt;p&gt;As you might imagine, this was not a simple application. Setting aside the complexity incurred from building on top of a content management system that was over a decade old, Oak was software built for professionals, and it showed. It supported complex workflows and had a practically uncountable number of features. And, honestly, it was still very usable, and it even looked nice!&lt;/p&gt;&lt;p&gt;The Times’ website is written with React, which is one of the big reasons that Oak was written in React. We were able to author React components that could be used by both the reader-facing website&lt;!-- --&gt; &lt;em&gt;and&lt;/em&gt; Oak, which meant that journalists were working in an editor that looked quite a lot like the reader-facing website.&lt;/p&gt;&lt;p&gt;But even without that advantage, React would have been a good choice for Oak. It was an app with a large amount of state, and that state drove a very complex user interface. In many ways, it was exactly the type of application that React was designed for.&lt;/p&gt;&lt;p&gt;The other library that Oak was written with was ProseMirror. Nowadays, there are really wonderful libraries like Lexical and Slate.js for building rich text editors with React, but back in 2017, ProseMirror was basically the only game in town. And besides, ProseMirror is a brilliant library. ProseMirror documents are modeled around the notion of a Schema — a kind of blueprint for a document — that allows developers to declaratively define what kinds of content their editor can edit, and how that content can fit together. If you’re not familiar with ProseMirror, it may be worth taking a moment to read through&lt;!-- --&gt; &lt;a class=&quot;font-bold underline&quot; href=&quot;https://prosemirror.net/docs/guide/&quot;&gt;the Library Guide&lt;/a&gt; &lt;!-- --&gt;to get a better sense of how it works.&lt;/p&gt;&lt;/section&gt;&lt;section id=&quot;the-problem&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;Unfortunately for us&lt;/span&gt;, React and ProseMirror do not play nicely together. When I first joined the Oak team, in 2019, my onboarding included a several-hour whiteboarding session on Oak’s frontend architecture. This included a deep dive into “The Seam,” the adapter layer that we’d built between React and ProseMirror. The Seam was… gnarly. Everyone had their suspicions that it wasn’t&lt;!-- --&gt; &lt;em&gt;quite&lt;/em&gt; correct, in the formal sense, and that the transient, hard-to-reproduce editing bugs that users often reported were probably due to something in its implementation. I remember this whiteboarding session clearly, because it was in that session, on my second day at the Times, that I decided what I was going to do. I was going to fix The Seam.&lt;/p&gt;&lt;p&gt;It turned out, this was very much not a one-engineer kind of job. Instead, over the next four years, our whole team learned the ins and outs of both React and ProseMirror. We deepened our knowledge, even going as far as to produce&lt;!-- --&gt; &lt;a class=&quot;font-bold underline&quot; href=&quot;https://nytimes.github.io/oak-byo-react-prosemirror-redux/&quot;&gt;educational materials for new team members&lt;/a&gt;. And over time, we became able to pinpoint precisely where React and ProseMirror disagreed, and started to come up with plans for better solutions.&lt;/p&gt;&lt;p&gt;As it happens, React and ProseMirror actually have very similar philosophies about how to manage the DOM. Both libraries maintain a sort of “virtual DOM”, a tree structure that’s very efficient to update, which maps to the actual DOM that the browser uses to render the web page. Both libraries also separate state from the view, and use that state to drive the view unidirectionally. The differences between how they implement these philosophies are small, but they’re very important.&lt;/p&gt;&lt;p&gt;React separates updates into two phases. Phase one is the “render” phase, and phase two is the “commit” phase. In the render phase, React traverses the component tree to update the virtual DOM. Because updating the virtual DOM is very fast (at least, relative to updating the actual DOM), the entire virtual DOM is computed from scratch (with some exceptions) during each render phase. Then, during the commit phase, React traverses the virtual DOM, finds places where it differs from the actual DOM, and uses this diff to make minimal updates the actual DOM.&lt;/p&gt;&lt;p&gt;This flow is strictly unidirectional — React expects all changes to happen to state first, and then it will translate those state updates into view updates. If React-managed DOM is directly modified outside the React lifecycle, React will revert those changes during the commit phase.&lt;/p&gt;&lt;p&gt;ProseMirror renders and commits all at once. Because it’s common to dispatch a transaction (a description of a change) and then immediately inspect the document to, e.g., update the placement of a widget, all updates to the ProseMirror synchronously update the DOM. Also, the relationship between ProseMirror state and the view is not&lt;!-- --&gt; &lt;em&gt;strictly&lt;/em&gt; unidirectional — because of how complex and underspecified text editing behavior is in web browsers, ProseMirror often allows the browser to handle a change, then inspects the document to determine what change happened.&lt;/p&gt;&lt;/section&gt;&lt;section id=&quot;first-attempt&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;h3 class=&quot;font-headings text-xl leading-[1] font-extralight uppercase md:text-3xl&quot;&gt;v1&lt;/h3&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;Let’s walk through&lt;/span&gt; a first approach at integrating React and ProseMirror, so that we can feel out the issues at play. The first thing that we want to be able to do is render the ProseMirror EditorView, the component responsible for managing the actual interactive text editor, from within a React component. We’ll need to construct the EditorView in an effect hook for two reasons:&lt;/p&gt;&lt;ol class=&quot;ml-4 list-decimal&quot;&gt;&lt;li&gt;&lt;p&gt;The EditorView needs to be provided with a DOM node to mount the editor on, just like ReactDOM’s&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;createRoot&lt;/span&gt;&lt;/code&gt; function. That means we need to hold off on creating it until after React has committed changes to the DOM.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Creating and updating the EditorView will produce “side effects.” Specifically, the EditorView will modify the real DOM.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;ProseMirror.tsx&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;ProseMirror.tsx&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;use client&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { useLayoutEffect, useRef } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorView } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-view&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorState } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-state&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { doc } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;./doc&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { plugins } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;./plugins&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export function &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;ProseMirror&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; mountRef &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useRef&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;HTMLDivElement &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; viewRef &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useRef&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;EditorView &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  useLayoutEffect&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(() &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;mountRef.current) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      viewRef.current?.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;destroy&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;();&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      viewRef.current &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    viewRef.current &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#FF79C6;font-weight:bold&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;EditorView&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(mountRef.current, {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      state&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; EditorState.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;create&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;({&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        doc,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        plugins,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      }),&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    });&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }, []);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;ref&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{mountRef} /&amp;gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This actually works fairly well! And indeed, many React/ProseMirror integrations look just like this. It works just fine for simple editors, but things start to get more complex as we add features. Let’s try adding a simple tooltip that shows the user what position they’re at in the document.&lt;/p&gt;&lt;p class=&quot;text-sm&quot;&gt;Note: if we were building this feature without React, we would use a ProseMirror plugin that implemented a widget decoration or a plugin view for this tooltip. But, as mentioned earlier, in any other context, this is exactly the kind of feature it makes sense to reach for React to build, and the premise of this integration is that we should be able to use React to add more complex features to our editor.&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;PositionTooltip.tsx&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;PositionTooltip.tsx&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorView } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-view&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;interface &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Props&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  view&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;EditorView &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export function &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;PositionTooltip&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;({ &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Props&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; position &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; view?.state.selection.anchor;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; coords &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    position &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!== &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;undefined &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; view?.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;coordsAtPos&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(position) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;coords) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      className&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;absolute bg-white p-1 shadow-md&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      style&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{{ top&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; coords.top, left&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; coords.left }}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      pos: {position}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… Huh. That didn’t work at all! At the moment, the entire ProseMirror integration lives in a ref (&lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;viewRef&lt;/span&gt;&lt;/code&gt;), so it doesn’t trigger a render when it updates. To fix this, we need to&lt;!-- --&gt; &lt;em&gt;lift&lt;/em&gt; the EditorState out of the EditorView and into React state, so that it will trigger a re-render when it’s updated. Let’s give that a shot. We’ll create a new React state hook to hold the EditorState, and use ProseMirror’s `view.updateState()` API to update the editor after the EditorState changes.&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;ProseMirror.tsx&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;ProseMirror.tsx&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;filter:contrast(0.3)&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;use client&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { useLayoutEffect, useRef, useState } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorView } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-view&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorState } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-state&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { doc } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;./doc&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { plugins } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;./plugins&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { PositionTooltip } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;./PositionTooltip&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export function &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;ProseMirror&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; mountRef &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useRef&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;HTMLDivElement &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; viewRef &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useRef&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;EditorView &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; [editorState, setEditorState] &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(() &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    EditorState.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;create&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;({&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      doc,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      plugins,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    }),&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;filter:contrast(0.3)&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  useLayoutEffect&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(() &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;mountRef.current) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      viewRef.current?.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;destroy&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;();&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      viewRef.current &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;viewRef.current) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      viewRef.current &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#FF79C6;font-weight:bold&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;EditorView&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(mountRef.current, {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        state&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; editorState,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;        dispatchTransaction&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;          setEditorState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.state.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;apply&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(tr));&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        },&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;filter:contrast(0.3)&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      });&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    viewRef.current.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;updateState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(editorState);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;filter:contrast(0.3)&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }, [editorState]);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;ref&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{mountRef} /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;PositionTooltip &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{viewRef.current} &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;state&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{editorState} /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;filter:contrast(0.3)&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is much better! The tooltip actually renders, for one thing. And as you move your cursor around, the tooltip follows, just like we intended. There’s a pretty big issue, though. Try typing something at the end of the last sentence. The cursor positioning totally breaks!&lt;/p&gt;&lt;p&gt;We’re again running into React’s two-phase update cycle. We call&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view.&lt;/span&gt;&lt;span style=&quot;color:#8250DF&quot;&gt;coordsAtPos&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;(position)&lt;/span&gt;&lt;/code&gt; during the&lt;!-- --&gt; &lt;em&gt;render&lt;/em&gt; phase, but that method inspects the DOM to determine its coordinates. Because we’re in the render phase, the DOM hasn’t been updated yet! Just like when we set up the EditorView, we need to move this call into an effect hook so that it executes at the end of the commit phase, after the DOM has been updated.&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;PositionTooltip.tsx&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;PositionTooltip.tsx&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;filter:contrast(0.3)&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorState } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-state&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorView } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-view&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { useLayoutEffect, useState } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;interface &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Props&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  view&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;EditorView &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  state&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;EditorState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export function &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;PositionTooltip&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;({ &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;state&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Props&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; position &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; state.selection.anchor;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; [top, setTop] &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;number &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; [left, setLeft] &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;number &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  useLayoutEffect&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(() &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (position &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=== &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;undefined &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;|| !&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;view) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; coords &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; view.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;coordsAtPos&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(position);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;    setTop&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(coords.top);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;    setLeft&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(coords.left);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }, [position, view]);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;filter:contrast(0.3)&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (top &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=== &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; left &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=== &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      className&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;absolute -translate-x-1/2 -translate-y-full transform rounded bg-white p-1 text-xs shadow-md&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      style&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{{ top&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; top &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; window.scrollY, left&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; left }}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      pos: {position}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Still no dice. The positioning still breaks when the document changes! The issue here is that the DOM that&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view.&lt;/span&gt;&lt;span style=&quot;color:#8250DF&quot;&gt;coordsAtPos&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;()&lt;/span&gt;&lt;/code&gt; is inspecting isn’t owned by React at all — it’s owned by ProseMirror! We update ProseMirror’s state and DOM in a layout effect in the&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#116329&quot;&gt;ProseMirror&lt;/span&gt; &lt;span style=&quot;color:#24292F&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt; component, which is executed &lt;em&gt;after&lt;/em&gt; the layout effect in the&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#116329&quot;&gt;PositionTooltip&lt;/span&gt; &lt;span style=&quot;color:#24292F&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt; component.&lt;/p&gt;&lt;p&gt;Fixing this is going to take some thinking, so we’ll just take note of it for now and come back to it later. We may as well start a list, as we’re going to run into a few of these.&lt;/p&gt;&lt;h3 class=&quot;font-headings text-lg leading-[1] font-extralight uppercase md:text-2xl&quot;&gt;To-do list&lt;/h3&gt;&lt;div class=&quot;flex gap-2&quot;&gt;&lt;input class=&quot;mt-[1.375rem] self-start&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;/&gt;&lt;p&gt;Devise a system for deferring layout effects in child components until&lt;!-- --&gt; &lt;em&gt;after&lt;/em&gt; the EditorView has updated its DOM&lt;/p&gt;&lt;/div&gt;&lt;/section&gt;&lt;section id=&quot;state-tearing&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;Before we move on&lt;/span&gt;, there’s one more subtle issue here that’s worth exploring. When moved the EditorState into React state, we updated our &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#116329&quot;&gt;PositionTooltip&lt;/span&gt; &lt;span style=&quot;color:#24292F&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt; &lt;!-- --&gt;component to read the current selection from this new state value, instead of from the EditorView. What would have happened if we’d left it as is, reading from the EditorView’s state?&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;PositionTooltip.tsx&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;PositionTooltip.tsx&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;filter:contrast(0.3)&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorState } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-state&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorView } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-view&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { useLayoutEffect, useState } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;interface &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Props&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  view&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;EditorView &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  state&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;EditorState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export function &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;PositionTooltip&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;({ &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Props&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; position &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; view?.state.selection.anchor;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;filter:contrast(0.3)&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; [top, setTop] &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;number &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; [left, setLeft] &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;number &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  useLayoutEffect&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(() &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (position &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=== &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;undefined &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;|| !&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;view) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; coords &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; view.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;coordsAtPos&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(position);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;    setTop&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(coords.top);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;    setLeft&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(coords.left);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }, [position, view]);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (top &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=== &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; left &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=== &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      className&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;absolute -translate-x-1/2 -translate-y-full transform rounded bg-white p-1 text-xs shadow-md&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      style&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{{ top&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; top &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; window.scrollY, left&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; left }}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      pos: {position}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Funky, right? The tooltip only moves after every &lt;em&gt;other&lt;/em&gt; &lt;!-- --&gt;selection change. The underlying issue here is one of&lt;!-- --&gt; &lt;strong&gt;state tearing&lt;/strong&gt;. During the render phase of this component, depending on where you look, you can find two different versions of the EditorState. If you look in React state, you’ll find the newest version — the state that’s about to be committed to the DOM. But if you look in ProseMirror state, you’ll find the previous version — the state that matches most recent DOM commit.&lt;/p&gt;&lt;p&gt;This is going to be another challenge to address, and one that will show up in slightly different forms throughout this journey. Let’s add it to our to-do list:&lt;/p&gt;&lt;h3 class=&quot;font-headings text-lg leading-[1] font-extralight uppercase md:text-2xl&quot;&gt;To-do list&lt;/h3&gt;&lt;div class=&quot;flex gap-2&quot;&gt;&lt;input class=&quot;mt-[1.375rem] self-start&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;/&gt;&lt;p&gt;Devise a system for deferring layout effects in child components until&lt;!-- --&gt; &lt;em&gt;after&lt;/em&gt; the EditorView has updated its DOM&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;flex gap-2&quot;&gt;&lt;input class=&quot;mt-[1.375rem] self-start&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;/&gt;&lt;p&gt;Ensure that ProseMirror’s state can only be accessed when it matches React’s state&lt;/p&gt;&lt;/div&gt;&lt;/section&gt;&lt;section id=&quot;node-views&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;Assuming we can address these issues&lt;/span&gt;, we have a rough idea of how to render a ProseMirror editor within React. What about rendering a React component within a ProseMirror editor? The ability to develop custom, stateful node views is one of ProseMirror’s biggest draws for the Oak team. It allowed us to build an editor where the controls were always local to the part of the document that they controlled, which in turn made the editor much more intuitive to use for our journalists.&lt;/p&gt;&lt;p&gt;As an example, let’s build a simple custom node view for an image node that allows us to choose whether an image is left-aligned, right-aligned, or centered. We want the interface for controlling the image alignment to live right below the actual image it applies to, so that it’s clear to the user what will happen when they take an action.&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;ImageNode.tsx&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;ImageNode.tsx&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { Node } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-model&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorView, NodeViewConstructor } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-view&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { createRoot } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;react-dom/client&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; cx &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;classnames&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { AlignmentButton } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;./AlignmentButton&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;interface &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Props&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  node&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Node&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  view&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;EditorView&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  getPos&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; () &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt; &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;number &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;function &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;ImageNode&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;({ &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;getPos&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Props&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;className&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;my-4 flex flex-col gap-2&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      {&lt;/span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;/* eslint-disable-next-line @next/next/no-img-element */&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;img&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;        className&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;cx&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;shrink grow-0&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;, {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;          &amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;self-start&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;            node.attrs.alignment &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=== &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;left&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot; &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;|| !&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;node.attrs.alignment,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;          &amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;self-center&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; node.attrs.alignment &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=== &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;center&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;          &amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;self-end&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; node.attrs.alignment &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=== &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;right&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        })}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;        src&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{node.attrs.src}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;        alt&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;        data-pm-controls&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;        className&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;flex gap-4 self-center&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;        contentEditable&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;AlignmentButton &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;alignment&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;left&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot; &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{view} &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;getPos&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{getPos} /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;AlignmentButton &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;alignment&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;center&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot; &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{view} &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;getPos&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{getPos} /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;AlignmentButton &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;alignment&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;right&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot; &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{view} &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;getPos&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{getPos} /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export const &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;image&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;NodeViewConstructor &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;getPos&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; dom &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; document.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;createElement&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; root &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;createRoot&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(dom);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  root.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;render&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;ImageNode &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{node} &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{view} &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;getPos&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{getPos} /&amp;gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    dom,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;    update&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;updatedNode&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (updatedNode.type &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!==&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; node.type) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;        return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      root.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;render&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;ImageNode &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{updatedNode} &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{view} &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;getPos&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{getPos} /&amp;gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    },&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;    destroy&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      root.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;unmount&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;();&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    },&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    // Prevent ProseMirror from handling events from within the&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    // node view&amp;#x27;s buttons&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;    stopEvent&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;e&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(e &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;instanceof &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;MouseEvent&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;)) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(e.target &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;instanceof &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;HTMLElement&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;)) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      let&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; el &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; e.target.parentElement;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      while&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (el) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;        if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (el.dataset.pmControls) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        el &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; el.parentElement;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    },&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  };&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;};&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let’s break that down a bit. First of all, we’re creating a custom ProseMirror node view. That looks like a function that takes the node and EditorView as arguments, along with a few others, and returns an object that implements the &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;NodeView&lt;/span&gt;&lt;/code&gt; API. Importantly, this NodeView object must have a&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;dom&lt;/span&gt;&lt;/code&gt; property that is synchronously set to a valid DOM node. This introduces a challenge right off the bat: ReactDOM’s &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;render&lt;/span&gt;&lt;/code&gt; function isn’t synchronous!&lt;/p&gt;&lt;p&gt;Essentially all React/ProseMirror integrations work around this constraint the way we do here: by producing a wrapping&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#116329&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt; element to hand to ProseMirror, and then asynchronously mounting the React component into that element. This turns out to be surprisingly fraught, as default browser editing behavior&lt;!-- --&gt; &lt;a class=&quot;font-bold underline&quot; href=&quot;https://github.com/nytimes/react-prosemirror/issues/42&quot;&gt;tends to delete these wrapping elements in some cases&lt;/a&gt;, but we’re going to stick with it for now!&lt;/p&gt;&lt;p&gt;We should also take a look at how we’re actually rendering our React component. This approach creates a new React tree, rooted at our wrapper div, for each node. So if there are thirty images in our document, we have thirty React trees. These trees are disjointed — their updates aren’t tied together in any way, and we can’t share context between them. This means that if we wanted to use a global state management library, like Redux or React Query, we would have to wrap each node view in its own top-level provider.&lt;/p&gt;&lt;p&gt;It also means that DOM updates happen asynchronously, and we can’t predict when they’ll be committed. If we have some widget that we’d like to position in the corner of our image node, there’s no clear place to call &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view.&lt;/span&gt;&lt;span style=&quot;color:#8250DF&quot;&gt;coordsToPos&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;()&lt;/span&gt;&lt;/code&gt; where we can be sure that a newly inserted image has been rendered to the DOM. Let’s walk through the sequence of events to understand why this is:&lt;/p&gt;&lt;ol class=&quot;ml-4 list-decimal&quot;&gt;&lt;li&gt;&lt;p&gt;A user clicks a button to insert a new image.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The event handler runs, which calls&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view.&lt;/span&gt;&lt;span style=&quot;color:#8250DF&quot;&gt;dispatch&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;()&lt;/span&gt;&lt;/code&gt;, passing a transaction that inserts the new image into the document.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The EditorView dispatch method calls the React state setter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;React executes its render phase, calling our component’s render functions. We know from earlier that it’s not yet safe to check the coordinates here, as the EditorView hasn’t been updated with the new state yet.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;React executes its commit phase. Changes are committed to the DOM, and effect hooks are run. This does &lt;em&gt;not&lt;/em&gt; include the ProseMirror document updates, as those are handled entirely by ProseMirror, and won’t be kicked off until the ProseMirror component’s layout effect runs.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;React runs the layout effects for our widget component. Again, we’ve already learned that we can’t check for coordinates safely here, because the layout effect for our ProseMirror component runs&lt;!-- --&gt; &lt;em&gt;after&lt;/em&gt; all of its children’s layout effects, so it hasn’t updated the EditorView with the new state yet.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;React runs the layout effect for our ProseMirror component, which updates the EditorView with the new EditorState, and commits its updates to the DOM. Earlier, we decided that this was where it would be safe to check coordinates, because the ProseMirror DOM is now updated. However, the new React-based image node view throws a wrench in this understanding, because its contents are rendered asynchronously. This means that even after&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view.&lt;/span&gt;&lt;span style=&quot;color:#8250DF&quot;&gt;updateState&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;()&lt;/span&gt;&lt;/code&gt; finishes executing, the contents of the &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#116329&quot;&gt;Image&lt;/span&gt; &lt;span style=&quot;color:#24292F&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt; &lt;!-- --&gt;component may not have been committed to the DOM yet.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;So we have a new to-do to add to our list: we need to find a way to keep our React-based node views in the same tree as our ProseMirror component. This will inevitably involve&lt;!-- --&gt; &lt;a class=&quot;font-bold underline&quot; href=&quot;https://react.dev/reference/react-dom/createPortal&quot;&gt;Portals&lt;/a&gt; &lt;!-- --&gt;— React’s approach to rendering a component’s children somewhere else in the browser DOM tree.&lt;/p&gt;&lt;h3 class=&quot;font-headings text-lg leading-[1] font-extralight uppercase md:text-2xl&quot;&gt;To-do list&lt;/h3&gt;&lt;div class=&quot;flex gap-2&quot;&gt;&lt;input class=&quot;mt-[1.375rem] self-start&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;/&gt;&lt;p&gt;Devise a system for deferring layout effects in child components until&lt;!-- --&gt; &lt;em&gt;after&lt;/em&gt; the EditorView has updated its DOM&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;flex gap-2&quot;&gt;&lt;input class=&quot;mt-[1.375rem] self-start&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;/&gt;&lt;p&gt;Ensure that ProseMirror’s state can only be accessed when it matches React’s state&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;flex gap-2&quot;&gt;&lt;input class=&quot;mt-[1.375rem] self-start&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;/&gt;&lt;p&gt;Use React Portals to keep React-based node views in the same tree as their parent ProseMirror component.&lt;/p&gt;&lt;/div&gt;&lt;/section&gt;&lt;section id=&quot;v1&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;This is the set of requirements&lt;/span&gt; that we armed ourselves with when we set out to implement the first version of our React ProseMirror library,&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;@nytimes&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;prosemirror&lt;/span&gt;&lt;/code&gt;. We met our first two requirements by hiding the EditorView away in a context, and only exposing it via React hooks. These hooks (&lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useEditorEffect&lt;/span&gt;&lt;/code&gt;,&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useEditorEventCallback&lt;/span&gt;&lt;/code&gt;, and&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useEditorEventListener&lt;/span&gt;&lt;/code&gt;) only ran&lt;!-- --&gt; &lt;em&gt;after&lt;/em&gt; the EditorView was updated with the latest state, when it was safe to both access the EditorView’s state and inspect the DOM with methods like &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view.&lt;/span&gt;&lt;span style=&quot;color:#8250DF&quot;&gt;coordsAtPos&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;()&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The final requirement was somewhat more challenging, but in the end we managed to construct a system for mounting node view components with portals. We even managed to ensure that child node view components were always rendered as children of their parent’s node view components, allowing parents to pass context to their children, which other React/ProseMirror integrations don’t support.&lt;/p&gt;&lt;p&gt;Here’s how we’re able to implement our two basic editor features from earlier with &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;@nytimes&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;prosemirror&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;Editor.tsx&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;Editor.tsx&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;use client&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { ProseMirror, useNodeViews } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;@nytimes/react-prosemirror&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { useLayoutEffect, useRef, useState } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorView } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-view&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { EditorState } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;prosemirror-state&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { doc } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;./doc&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { plugins } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;./plugins&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { image } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;./ImageNode&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { PositionTooltip } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;./PositionTooltip&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; reactNodeViews &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  image,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;};&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export function &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;Editor&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; [mount, setMount] &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;HTMLDivElement &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { nodeViews, renderNodeViews } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useNodeViews&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(reactNodeViews);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; [editorState, setEditorState] &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(() &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    EditorState.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;create&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;({&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      doc,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      plugins,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    }),&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;ProseMirror&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      mount&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{mount}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      state&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{editorState}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      dispatchTransaction&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{(&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;        setEditorState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;((&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;prev&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; prev.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;apply&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(tr));&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      }}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      nodeViews&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{nodeViews}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;ref&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{setMount} /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      {&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;renderNodeViews&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;()}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;PositionTooltip&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;ProseMirror&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This resolves all of our most glaring issues from earlier. The tooltip is always in the correct place, even when you add new content to the document. The image component is rendered in the main React tree, which means that the tooltip renders in the correct place when it’s selected, too (you can test that out by double-clicking the image to select it).&lt;/p&gt;&lt;h3 class=&quot;font-headings text-lg leading-[1] font-extralight uppercase md:text-2xl&quot;&gt;To-do list&lt;/h3&gt;&lt;div class=&quot;flex gap-2&quot;&gt;&lt;input class=&quot;mt-[1.375rem] self-start&quot; disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;/&gt;&lt;p&gt;Devise a system for deferring layout effects in child components until&lt;!-- --&gt; &lt;em&gt;after&lt;/em&gt; the EditorView has updated its DOM&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;flex gap-2&quot;&gt;&lt;input class=&quot;mt-[1.375rem] self-start&quot; disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;/&gt;&lt;p&gt;Ensure that ProseMirror’s state can only be accessed when it matches React’s state&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;flex gap-2&quot;&gt;&lt;input class=&quot;mt-[1.375rem] self-start&quot; disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;/&gt;&lt;p&gt;Use React Portals to keep React-based node views in the same tree as their parent ProseMirror component.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;Unfortunately, as we found when we released the library to the public, there were still a few subtle bugs that proved very challenging to address with this architecture.&lt;/p&gt;&lt;/section&gt;&lt;section id=&quot;v2&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;h3 class=&quot;font-headings text-xl leading-[1] font-extralight uppercase md:text-3xl&quot;&gt;v2&lt;/h3&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;It turned out&lt;/span&gt;, we’d walked head-first into a variation on ninety-ninety rule. Normally, the ninety-ninety rule is stated as follows:&lt;/p&gt;&lt;blockquote class=&quot;mx-10 my-5&quot;&gt;&lt;p&gt;The first 90 percent of the code accounts for the first 90 percent of the development time. The remaining 10 percent of the code accounts for the other 90 percent of the development time.&lt;/p&gt;&lt;p&gt;— Tom Cargill, Bell Labs&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In our case, it’s more like “The first 90 percent of the solution accounts for the first 90 percent of the code. The remaining 10 percent of the solution accounts for the other 90 percent of the code.” We were &lt;em&gt;so close&lt;/em&gt; to a robust integration between React and ProseMirror, but I was becoming increasingly convinced that our approach was fundamentally flawed. Let’s take a look at&lt;!-- --&gt; &lt;a class=&quot;font-bold underline&quot; href=&quot;https://github.com/nytimes/react-prosemirror/issues/69&quot;&gt;one of the bugs&lt;/a&gt; &lt;!-- --&gt;that was reported against the&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;@nytimes&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;prosemirror&lt;/span&gt;&lt;/code&gt; library as an example.&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;LeafNode.tsx&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;LeafNode.tsx&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  NodeViewComponentProps,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  ReactNodeViewConstructor,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  useEditorEventCallback,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  useNodePos,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;} &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;@nytimes/react-prosemirror&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { ChangeEvent } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;function &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;LeafNode&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;({ &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;NodeViewComponentProps&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; pos &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useNodePos&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;();&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; handleTextChange &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useEditorEventCallback&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    (&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;view&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;event&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;ChangeEvent&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;HTMLInputElement&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      view.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;dispatch&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        view.state.tr.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;setNodeAttribute&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(pos, &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;, event.target.value),&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    },&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      contentEditable&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;      className&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;my-2 flex flex-col items-start gap-2 rounded bg-gray-800 p-2 text-white&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;{node.attrs.text &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;br&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; /&amp;gt;}&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;className&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;flex gap-4 text-black&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;input &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{node.attrs.text} &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;onChange&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{handleTextChange} /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export const &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;leaf&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;ReactNodeViewConstructor &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; () &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; dom &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; document.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;createElement&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    dom,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    component&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; LeafNode,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;    stopEvent&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;e&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    },&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  };&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;};&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We’ve introduced a new (somewhat contrived) node type. It’s a leaf node, so it doesn’t have any children, but it has an attribute called “text”. Whatever is in the text attribute will be rendered as text within the node view. Since this node doesn’t have any editable children, it renders a text input — when you edit the text input, it updates the node’s text attribute, and therefore updates the node’s rendered text.&lt;/p&gt;&lt;p&gt;Depending on how you tested out this node view, you may not have noticed the issue. As long as you make changes with your cursor at the end of the text input, everything works great! But try to make a change somewhere in the middle of the input. Did you see it? Your cursor will always get snapped to the end of the input after the first keypress!&lt;/p&gt;&lt;p&gt;In order to understand what’s happening here, we’ll need to walk through the sequence of events again.&lt;/p&gt;&lt;ol class=&quot;ml-4 list-decimal&quot;&gt;&lt;li&gt;&lt;p&gt;A user types something into the input.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;onChange&lt;/span&gt;&lt;/code&gt; is called, which calls&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;dispatchTransaction&lt;/span&gt;&lt;/code&gt;, which updates the state of the ProseMirror component.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The React tree renders because of the state update, but the EditorView’s state has not been updated yet, so all the node views still have references to the nodes from the previous render.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The input, which is a descendant of the ProseMirror component, is rendered with the node from the old state, so its value is forcibly reset to the previous value (this resets the selection because React doesn’t really have any other good options).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt; in the ProseMirror component runs, updating the state on the EditorView.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The EditorView calls the update methods on all of its node views, which triggers state updates for their nodes, and so the Image component and its input are re-rendered with the new, updated node value.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;This was pretty disappointing — even after all that work, there was still &lt;strong&gt;state tearing&lt;/strong&gt; happening! It was more subtle than before, because the state always settled immediately after the tear, and because the resolution occurred in a layout effect, the user never saw the torn state in the view. But there were still bugs like this that occurred in the edge cases.&lt;/p&gt;&lt;/section&gt;&lt;section id=&quot;the-way-out&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;It seemed like there was only one way out&lt;/span&gt;: to re-write ProseMirror’s rendering engine with React. At their core, all the state tearing issues that we’ve discussed are due to our usage of a layout effect to update the EditorView. We have to do it this way, or basic React functionality like Suspense will be broken. The only way to make it safe to update the EditorView in the render function would be if that update didn’t produce any side effects. But if the update doesn’t produce any side effects, what’s responsible for actually updating the view? Well, I thought, maybe the answer is React!&lt;/p&gt;&lt;p&gt;ProseMirror is a very modular framework, and&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;prosemirror&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view&lt;/span&gt;&lt;/code&gt; is the library responsible for actually rendering the editable document in the browser. At first, I thought that I could simply write an alternative&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;prosemirror&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view&lt;/span&gt;&lt;/code&gt;, but that turned out to be an immense undertaking. &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;prosemirror&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view&lt;/span&gt;&lt;/code&gt; does a &lt;em&gt;lot&lt;/em&gt;. The selection management code alone could be its own library, full of browser-specific workarounds and handlers for dozens of edge cases.&lt;/p&gt;&lt;p&gt;There was another issue with re-writing&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;prosemirror&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view&lt;/span&gt;&lt;/code&gt;, too. Because ProseMirror’s EditorView is a JavaScript class, there is code throughout the ProseMirror-verse that occasionally checks to see whether something is an EditorView like this:&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;maybeView&lt;/span&gt; &lt;span style=&quot;color:#CF222E&quot;&gt;instanceof&lt;/span&gt; &lt;span style=&quot;color:#953800&quot;&gt;EditorView&lt;/span&gt;&lt;/code&gt;. Even more commonly, developers that use Typescript will type arguments to, e.g., ProseMirror commands using &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;EditorView&lt;/span&gt;&lt;/code&gt; as a type. Any solution that involved a fork of the EditorView class would break all of these cases, and I really, really wanted to create something that was compatible with as much existing ProseMirror code as possible.&lt;/p&gt;&lt;p&gt;So I needed to reuse the actual &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;EditorView&lt;/span&gt;&lt;/code&gt; &lt;!-- --&gt;class from &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;prosemirror&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view&lt;/span&gt;&lt;/code&gt;, but I needed to change its functionality. What about a subclass? A subclass would allow me to override method implementations from the EditorView class with my own, but it would still pass&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;instanceof&lt;/span&gt;&lt;/code&gt; checks and Typescript type checks.&lt;/p&gt;&lt;p&gt;Let’s give that a shot. The goal is to prevent any side effects from occurring within the constructor and the setProps method, so that we can safely call these during the render function.&lt;/p&gt;&lt;p&gt;To prevent side effects within the constructor, we’ll pass a stub document and empty mount to the superclass constructor, which will result in creating a few DOM nodes that aren’t attached to the HTML document. Technically this is a side effect, too, but it’s one that doesn’t have any user-facing impact, and it can be done any number of times safely. Then, we can clear out that stub DOM, and replace it with the DOM produced by our React renderer.&lt;/p&gt;&lt;p&gt;The setProps method will be more challenging. In this subclass, the goal will be to split up the functionality of setProps into two parts:&lt;/p&gt;&lt;ol class=&quot;ml-4 list-decimal&quot;&gt;&lt;li&gt;&lt;p&gt;A “pure” method, cleverly named&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;pureSetProps&lt;/span&gt;&lt;/code&gt;, which will set the new props on the EditorView instance, but will not trigger any side effects.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;An “effectful” method, &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;runPendingEffects&lt;/span&gt;&lt;/code&gt;, which will execute the side effects that are due from the latest&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;pureSetProps&lt;/span&gt;&lt;/code&gt; call.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Notably, these pending side effects executed by&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;runPendingEffects&lt;/span&gt;&lt;/code&gt; will not include DOM updates, because that will be handled by React! That means that, in addition to subclassing the EditorView, we’ll need to modify ProseMirror’s virtual DOM implementation, called the “view descriptor tree.” We’ll get to that in a minute!&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;ReactEditorView.ts&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;ReactEditorView.ts&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export class &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD&quot;&gt;ReactEditorView &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;extends &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;EditorView&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  private&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; shouldUpdatePluginViews &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  private&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; oldProps&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;DirectEditorProps&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  private&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; _props&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;DirectEditorProps&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  constructor&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    place&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { mount&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;HTMLElement&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    props&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;DirectEditorProps &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { docView&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;NodeViewDesc&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  ) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    // Call the superclass constructor with an empty&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    // document and limited props. We&amp;#x27;ll set everything&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    // else ourselves.&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    super&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(place, {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      state&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; EditorState.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;create&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;({&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        schema&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; props.state.schema,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;        plugins&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; props.state.plugins,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      }),&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      plugins&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; props.plugins,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    });&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.shouldUpdatePluginViews &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;._props &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; props;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.oldProps &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { state&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; props.state };&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.state &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; props.state;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.domObserver.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;stop&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;();&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.domObserver &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#FF79C6;font-weight:bold&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;SelectionDOMObserver&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.domObserver.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;start&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;();&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.editable &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;getEditable&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    // Destroy the DOM created by the default&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    // ProseMirror ViewDesc implementation; we&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    // have a NodeViewDesc from React instead.&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.docView.dom.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;replaceChildren&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;();&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.docView &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; props.docView;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;  /**&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    * Like setProps, but without executing any side effects.&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    * Safe to use in a component render method.&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    */&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  pureSetProps&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;props&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Partial&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;DirectEditorProps&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;._props &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      ...&lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;._props,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      ...&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;props,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    };&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.state &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;._props.state;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.editable &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;getEditable&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;  /**&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    * Triggers any side effects that have been queued by previous&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    * calls to pureSetProps.&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    */&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  runPendingEffects&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;changedProps&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.props, &lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.oldProps)) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;      const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; newProps &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.props;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;      this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;._props &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.oldProps;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;      this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.state &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;._props.state;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;      this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;update&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(newProps);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  update&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;props&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;DirectEditorProps&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    super&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;update&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(props);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    // Ensure that side effects aren&amp;#x27;t re-triggered until&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    // pureSetProps is called again&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.oldProps &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; props;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  updatePluginViews&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;prevState&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;?: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;EditorState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.shouldUpdatePluginViews) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;      super&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;updatePluginViews&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(prevState);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;  // We want to trigger the default EditorView cleanup, but without&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;  // the actual view.dom cleanup (which React will have already handled).&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;  // So we give the EditorView a dummy DOM element and ask it to clean up&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  destroy&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.dom &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; document.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;createElement&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    super&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;destroy&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;();&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;          &lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Our subclass’s constructor takes a “docView” prop as an argument. This isn’t something that the superclass takes as an argument — the superclass is responsible for constructing and managing its own docView. The docView is the view descriptor tree that we mentioned earlier — ProseMirror’s virtual DOM implementation. A big difference between ProseMirror’s virtual DOM and React’s is that when ProseMirror updates its virtual DOM, each individual view descriptor updates its own corresponding DOM nodes immediately. Since our goal is to have those DOM nodes managed by React, we need to prevent that behavior. So we produce our own view descriptor tree, compatible with the ProseMirror view descriptor API, but with a no-op update implementation.&lt;/p&gt;&lt;p&gt;The view descriptor implementations are somewhat complex and verbose, but here’s a relatively simple one (the view descriptor for a given ProseMirror node) to demonstrate the principle.&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;viewdesc.ts&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;viewdesc.ts&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;// Node view descs are the main, most common type of view desc, and&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;// correspond to an actual node in the document. Unlike mark descs,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;// they populate their child array themselves.&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export class &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD&quot;&gt;NodeViewDesc &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;extends &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;ViewDesc&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  constructor&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    parent&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;ViewDesc &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    children&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;ViewDesc&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;[],&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;    getPos&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; () &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt; &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;number&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    public &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Node&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    public &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;outerDeco&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: readonly &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Decoration&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;[],&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    public &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;innerDeco&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;DecorationSource&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    dom&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;DOMNode&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    contentDOM&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;HTMLElement &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    public &lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;nodeDOM&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;DOMNode&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    public &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;stopEvent&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;event&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Event&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt; &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;boolean&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    public &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;selectNode&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; () &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt; &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    public &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;deselectNode&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; () &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt; &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;void&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  ) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;    super&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(parent, children, getPos, dom, contentDOM);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;  // This always does nothing and returns true. The actual&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;  // DOM updates are handled by React.&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  update&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    _node&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Node&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    _outerDeco&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: readonly &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Decoration&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;[],&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    _innerDeco&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;DecorationSource&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    _view&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;EditorView&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  ) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  updateOuterDeco&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;    // pass&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  matchesNode&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    node&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Node&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;,&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    outerDeco&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: readonly &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Decoration&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;[],&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;    innerDeco&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;DecorationSource&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  ) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;      this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.dirty &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; NOT_DIRTY &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      node.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;eq&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.node) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;      sameOuterDeco&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(outerDeco, &lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.outerDeco) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      (innerDeco &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;as &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;InternalDecorationSource&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;).&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;eq&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.innerDeco)&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  get &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.node.nodeSize;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  get &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.node.isLeaf &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;? &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;0 &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  get &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;domAtom&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    return &lt;/span&gt;&lt;span style=&quot;color:#BD93F9;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;.node.isAtom;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p class=&quot;text-sm font-bold&quot;&gt;Why not just drop the view descriptors? Doesn’t React have it’s own virtual DOM?&lt;/p&gt;&lt;p class=&quot;text-sm&quot;&gt;At one point, I looked into abandoning ProseMirror’s view descriptor tree. It turns out, a very significant amount of ProseMirror’s view functionality is baked deeply into the view descriptors, and ProseMirror view code assumes that it’s there. This is integral to how ProseMirror’s selection management works, as well as methods like&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view.coordsAtPos&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;&lt;/section&gt;&lt;section id=&quot;react-renderer&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;Then came the true challenge&lt;/span&gt;: re-implementing ProseMirror’s DOM update algorithm in React. For each view descriptor type (doc node, node, mark, widget, and text), we needed a React component that would implement the same behavior as the default EditorView. Then, we needed a series of components for rendering widget decorations in the correct place and wrapping nodes in marks and decorators. I ended up porting the entire&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;prosemirror&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;view&lt;/span&gt;&lt;/code&gt; test suite over to ensure I hadn’t missed anything (spoiler alert: I had, there are more tests now).&lt;/p&gt;&lt;p&gt;Walking through this new React implementation is too deep for even this &lt;em&gt;very&lt;/em&gt; deep blog post, but anyone interested should take a look at&lt;!-- --&gt; &lt;a class=&quot;font-bold underline&quot; href=&quot;https://github.com/handlewithcarecollective/react-prosemirror/tree/main/src/components&quot;&gt;the implementation on GitHub&lt;/a&gt;. For now, let’s just take a look at how we can use this new approach, published as&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;@handlewithcare&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;prosemirror&lt;/span&gt;&lt;/code&gt;, to implement all of our previously problematic features without any state tearing!&lt;/p&gt;&lt;p class=&quot;text-sm&quot;&gt;Want to see more? Check out&lt;!-- --&gt; &lt;a class=&quot;font-bold underline&quot; href=&quot;https://handlewithcarecollective.github.io/react-prosemirror&quot;&gt;the full editor demo on GitHub Pages&lt;/a&gt;!&lt;/p&gt;&lt;p&gt;This new library has some additional wins over the old one. It has support for server-side rendering, for one thing. It’s also very performant, even for very long documents with large numbers of custom node views. That was its own set of challenges, and will likely earn its own blog post some day soon! For now, give&lt;!-- --&gt; &lt;code class=&quot;text-sm md:text-lg&quot;&gt;&lt;span style=&quot;color:#24292F&quot;&gt;@handlewithcare&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#CF222E&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;prosemirror&lt;/span&gt;&lt;/code&gt; a shot, and let me know what you think!&lt;/p&gt;&lt;/section&gt;&lt;/main&gt;
    </content>
  </entry>

  <entry>
    <title type="text">There’s no such thing as an isomorphic layout effect</title>
    <id>https://handlewithcare.dev/blog/no_such_thing_isomorphic_layout_effect/</id>
    <updated>2025-02-22T05:00:00.000Z</updated>
    <published>2025-02-22T05:00:00.000Z</published>
    <link href="https://handlewithcare.dev/blog/no_such_thing_isomorphic_layout_effect/" />
    <author>
      <name>Shane Friedman</name>
      <uri>https://handlewithcare.dev/#Shane Friedman</uri>
    </author>
    <summary type="text">There’s something off about the most popular approach to quieting React’s warnings about using layout effects during server-side rendering. Let’s break down why the warning exists, and when it really makes sense to disable it without actually addressing it.</summary>
    <content type="html" xml:lang="en" xml:base="http://handlewithcare.dev/blog/no_such_thing_isomorphic_layout_effect/">
      &lt;main class=&quot;mx-auto mt-20 flex max-w-prose flex-col gap-4&quot;&gt;&lt;header class=&quot;flex flex-col gap-8&quot;&gt;&lt;a class=&quot;font-bold underline&quot; href=&quot;/blog&quot;&gt;Back to all writing&lt;/a&gt;&lt;p&gt;Feb. 22, 2025&lt;/p&gt;&lt;h2 class=&quot;font-headings text-center text-2xl leading-[1] font-extralight uppercase md:text-4xl&quot;&gt;There’s no such thing as an isomorphic layout effect&lt;/h2&gt;&lt;p class=&quot;text-base font-bold md:text-xl&quot;&gt;by &lt;!-- --&gt;Shane Friedman&lt;/p&gt;&lt;p&gt;Originally published to&lt;!-- --&gt; &lt;a class=&quot;font-bold underline&quot; href=&quot;https://smoores.dev/post/no_such_thing_isomorphic_layout_effect/&quot;&gt;smoores.dev&lt;/a&gt;&lt;/p&gt;&lt;/header&gt;&lt;section id=&quot;intro&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;So, recently,
&lt;a class=&quot;font-bold underline&quot; href=&quot;https://github.com/handlewithcarecollective/react-prosemirror&quot;&gt;React ProseMirror&lt;/a&gt;
added support for server-side rendering. If you read &lt;a class=&quot;font-bold underline&quot; href=&quot;/blog/why_i_rebuilt_prosemirror_view&quot;&gt;my post about how React ProseMirror works&lt;/a&gt;, you may already know that React ProseMirror relies fairly heavily on
React’s &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt; hook for reading data
from the DOM after render. And if you’re familiar with server-side
rendering, you may be familiar with what happens when you render a
component that uses &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt; on the
server:&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span&gt;Warning: useLayoutEffect does nothing on the server, because its effect&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span&gt;cannot be encoded into the server renderer&amp;#x27;s output format. This will&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span&gt;lead to a mismatch between the initial, non-hydrated UI and the intended&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span&gt;UI. To avoid this, useLayoutEffect should only be used in components&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span&gt;that render exclusively on the client. See&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span&gt;https://reactjs.org/link/uselayouteffect-ssr for common fixes.&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/section&gt;&lt;section id=&quot;breakdown&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;It’s worth&lt;/span&gt; breaking down what this warning is actually trying
to communicate, because it’s not especially straightforward. To start, we should
review what &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt; is actually for. Like other React hooks,
&lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt; provides a mechanism for managing side effects. In
particular, as the name implies, layout effects are meant to be side effects
that read from the DOM, usually for the purpose of modifying the layout of a
component. To allow this, React will execute a component’s render function,
commit the changes to the DOM, and then immediately run its layout effects
&lt;em&gt;before&lt;/em&gt; the browser paints those DOM updates. This means that something like a
tooltip component can evaluate the position of its anchor in a layout effect,
update its state to reflect that position, and be re-rendered with that new
state, all without the user ever seeing the tooltip in the wrong place.&lt;/p&gt;&lt;p&gt;Now let’s walk through what happens when we server-side render a
component like this. Below, we have an example application that uses a
layout effect to position a tooltip:&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;App.tsx&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;App.tsx&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { useLayoutEffect } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export function &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;App&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; [tooltipTop, setTooltipTop] &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; [tooltipLeft, setTooltipLeft] &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useState&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; anchorRef &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useRef&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;HTMLDivElement &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;| &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&quot;color:#BD93F9&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  useLayoutEffect&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(() &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;anchorRef.current) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; rect &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; anchorRef.current.&lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;getBoundingClientRect&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;();&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;    setTooltipTop&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(rect.top);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;    setTooltipLeft&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(rect.left);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  }, []);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;article&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;h1&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;Positioned Tooltip Demo&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;h1&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;ref&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{anchorRef} /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;A tooltip should be positioned above this paragraph.&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;      &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;style&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;{{ position&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;absolute&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;, top, left }}&amp;gt;This is the tooltip&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;    &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;article&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  );&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Because we’re using a layout effect, this component will actually be
rendered twice on mount, with both renders occurring before the DOM
has even been painted once. The result is that the tooltip will be
correctly positioned on the very first paint, with the user only ever
visually seeing a DOM represented by the following HTML:&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;client.html&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;client.html&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;article&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;h1&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;Positioned Tooltip Demo&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;h1&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;A tooltip should be positioned above this paragraph.&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;style&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;position: absolute; top: 50px; left: 8px;&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;article&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But what happens when we render this component on the server? There is
no DOM on the server at all, so React never executes layout effects.
Instead, the component is rendered exactly once, using the default
values for our state:&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;server.html&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;server.html&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;article&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;h1&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;Positioned Tooltip Demo&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;h1&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;A tooltip should be positioned above this paragraph.&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;  &amp;lt;!-- focus(1:1) --&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;  &amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color:#50FA7B;font-style:italic&quot;&gt;style&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;position: absolute; top: 0; left: 0;&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;article&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This means that in a server-side rendered context, until the
client-side JavaScript bundle is loaded, parsed, and executed, the
user will be looking at &lt;em&gt;the wrong UI&lt;/em&gt;. The tooltip will simply
be in the wrong place (at &lt;code&gt;&lt;span style=&quot;color:#0550AE&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#24292F&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color:#0550AE&quot;&gt;0&lt;/span&gt;&lt;/code&gt;). It will look
broken!&lt;/p&gt;&lt;p&gt;This is precisely the issue that React was trying to warn us about.
Because effect hooks don’t execute on the server at all, server-side
rendered UIs that rely on them may appear broken until they’re
hydrated on the client. Following the link from the warning message
takes us to a GitHub Gist with two proposed solutions: replacing the &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt; with a
&lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useEffect&lt;/span&gt;&lt;/code&gt;, and conditionally rendering the component
that uses &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt; only on the client. For our
tooltip example, we should use the second option — it’s better to simply not
render the tooltip at all until the client-side JavaScript has a chance to run
and determine where it should be positioned.&lt;/p&gt;&lt;/section&gt;&lt;section id=&quot;isomorphic-layout-effect&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;Not all layout effects&lt;/span&gt; actually need to &lt;em&gt;modify&lt;/em&gt; the layout,
though. React ProseMirror, for example, uses layout effects internally to
maintain ProseMirror’s view descriptor tree, which is roughly analogous to
React’s virtual DOM. Because this requires &lt;em&gt;reading&lt;/em&gt; from the DOM, but not
modifying it, it’s actually safe to include in a server-side rendered component.
But it’s a huge pain to fill up users’ server logs with warnings about
&lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt; that they can’t (and don’t need to) do anything about!&lt;/p&gt;&lt;p&gt;If you’ve been around the server-side rendering block once or twice,
you can probably see where this is going. The
use-isomorphic-layout-effect library, or other implementations of it
available from other popular libraries, is often the first tool that
developers reach for when they encounter this warning. Let’s take a
look at its implementation:&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;use-isomorphic-layout-effect/src/index.ts&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;use-isomorphic-layout-effect/src/index.ts&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { useEffect, useLayoutEffect } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; isClient &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;#is-client&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export default&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; isClient &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useLayoutEffect &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useEffect;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Very simple! The library only runs
&lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt; if the code is running on the
client (in the browser, this determined via
_&lt;code&gt;typeof document !== &amp;quot;undefined&amp;quot;&lt;/code&gt;).
On the server, instead, it runs… _&lt;code&gt;useEffect&lt;/code&gt;,
instead? That’s sort of odd. Effects never execute on the server — why
would we bother running &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useEffect&lt;/span&gt;&lt;/code&gt; there?&lt;/p&gt;&lt;p&gt;And it’s not just this library that’s made this somewhat odd choice of
no-op. Here’s react-use’s implementation:&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;react-use&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;react-use&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useIsomorphicLayoutEffect &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; isBrowser &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useLayoutEffect &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useEffect;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Mantine design system:&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;mantine&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;mantine&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useIsomorphicEffect &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  typeof&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; document &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!== &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot; &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useLayoutEffect &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useEffect;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;React Beautiful DnD:&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;react-beautiful-dnd&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;react-beautiful-dnd&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useIsomorphicLayoutEffect &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  typeof&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; window &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!== &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot; &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  typeof&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; window.document &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!== &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot; &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  typeof&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; window.document.createElement &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!== &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    ?&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useLayoutEffect&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;    :&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useEffect;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In case it’s not clear why I’m so fascinated by this choice, here’s
React ProseMirror’s implementation:&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;useClientLayoutEffect.ts&amp;quot;&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;useClientLayoutEffect.ts&amp;quot;&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; { useLayoutEffect } &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;from &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;react&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;export function &lt;/span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useClientLayoutEffect&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  ...&lt;/span&gt;&lt;span style=&quot;color:#FFB86C;font-style:italic&quot;&gt;args&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color:#8BE9FD;font-style:italic&quot;&gt;Parameters&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;typeof&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useLayoutEffect&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;  if&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;typeof&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; document &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=== &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;  useLayoutEffect&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;args);&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This implementation has &lt;em&gt;precisely&lt;/em&gt; the same behavior as the
implementations above. On the client, it calls
&lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt;, and on the server, it does
nothing. I didn’t name it “isomorphic”, because it’s not really
isomorphic — at least in the sense of “Isomorphic JavaScript”, which
describes JavaScript code that runs on both the client and the server
— as it doesn’t run on the server at all!&lt;/p&gt;&lt;/section&gt;&lt;section id=&quot;conclusion&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;Just to be clear&lt;/span&gt;, this doesn’t &lt;em&gt;really&lt;/em&gt; matter. I’m not arguing
that no one should ever use use-isomorphic-layout-effect, or that all of these
libraries need to change their implementations of this function to use an
explicit no-op instead of &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useEffect&lt;/span&gt;&lt;/code&gt; on the server. I &lt;em&gt;am&lt;/em&gt;, however, curious
about where this surprisingly ubiquitous quirk of the React ecosystem came from.
And I have a hypothesis.&lt;/p&gt;&lt;p&gt;In February of 2019, the React team released React 16.8, the first
stable release of React that included hooks. Two months later, React
Redux released their v7, which included a new hooks-based integration
between React and Redux.
&lt;a class=&quot;font-bold underline&quot; href=&quot;https://github.com/reduxjs/react-redux/commit/96fec159e2afb8649321d8cd61841b9cf406ae8f#diff-9f098d970b2879a8b6675a3aea9ece3ea36c2c0d1bdfb7008f2739cda236b839R35-R281&quot;&gt;And wouldn’t you know it&lt;/a&gt;:&lt;/p&gt;&lt;div data-bright-theme=&quot;dracula&quot; class=&quot;text-sm md:text-base&quot; style=&quot;color:#F8F8F2;border-radius:4px;overflow:hidden;margin:1em 0;--selection-background:#44475A;--line-number-color:#6272A4;--tab-border:#191A21;--tab-background:#282A36;--tab-color:#F8F8F2;--inactive-tab-background:#21222C;--inactive-tab-color:#6272A4;--tab-top-border:#FF79C680;--tab-bottom-border:#282A36;color-scheme:dark&quot;&gt;&lt;style&gt;
  [data-bright-theme] ::selection { background-color: var(--selection-background) }
  
  &lt;/style&gt;&lt;div style=&quot;background:#191A21;color:#F8F8F2;position:relative;display:flex&quot;&gt;&lt;div data-bright-tab=&quot;connectAdvanced.js&amp;quot;&quot; style=&quot;cursor:pointer;background:var(--tab-background);color:var(--tab-color);display:inline-block;padding:0.5em 1em;position:relative;font-family:Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif;font-size:13px;border-right:1px solid var(--tab-border)&quot;&gt;connectAdvanced.js&amp;quot;&lt;div style=&quot;position:absolute;left:0;top:0;height:1px;z-index:10;background:var(--tab-top-border);width:100%&quot;&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;height:1px;z-index:10;background:var(--tab-bottom-border);width:100%&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position:absolute;bottom:0;left:0;width:100%;pointer-events:none;background:#191A21;height:1px;z-index:9&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre style=&quot;margin:0;color:#F8F8F2;background:#282A36;padding:1em 0;overflow:auto&quot;&gt;&lt;code style=&quot;display:block;min-width:fit-content&quot;&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;// React currently throws a warning when using useLayoutEffect on the server.&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;// To get around it, we can conditionally useEffect on the server (no-op) and&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;// useLayoutEffect in the browser. We need useLayoutEffect because we want&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;// \`connect\`_ to perform sync updates to a ref to save the latest props after&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;// a render is actually committed to the DOM.&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useIsomorphicLayoutEffect &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;typeof&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; window &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;!== &lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;#x27;&lt;/span&gt;&lt;span style=&quot;color:#F1FA8C&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color:#E9F284&quot;&gt;&amp;#x27; &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useLayoutEffect &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; useEffect&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;...&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;// We need this to execute synchronously every time we re-render. However, React warns&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;// about useLayoutEffect in SSR, so we try to detect environment and fall back to&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6272A4&quot;&gt;// just useEffect instead to avoid the warning, since neither will run anyway.&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 1em&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#50FA7B&quot;&gt;useIsomorphicLayoutEffect&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt;(() &lt;/span&gt;&lt;span style=&quot;color:#FF79C6&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#F8F8F2&quot;&gt; {&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Make sure to read those comments — the React Redux team seems fully
aware that &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useEffect&lt;/span&gt;&lt;/code&gt; is a mere no-op here.
React Beautiful DnD’s implementation actually directly references this
React Redux code. Other implementations likely either copied from one
of these two popular libraries, or from
&lt;a class=&quot;font-bold underline&quot; href=&quot;https://medium.com/@alexandereardon/uselayouteffect-and-ssr-192986cdcf7a&quot;&gt;this Medium post from a few weeks later&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;From what I can tell, a very popular, well maintained library made an
early, arbitrary implementation decision. Because copying this library
felt like a safe bet to other library maintainers, this arbitrary
decision became the de facto implementation for this workaround. A
Medium post about this implementation became so widely read that it’s
still the number one Google result for the query “useLayoutEffect ssr
warning”, several slots above the GitHub Gist discussing the correct
solution for most use cases.&lt;/p&gt;&lt;/section&gt;&lt;section id=&quot;why-it-matters&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;Even though I had an explanation&lt;/span&gt;, this kept itching at me. This
is partly due to the description of the use-isomorphic-layout-effect library,
which reads:&lt;/p&gt;&lt;blockquote class=&quot;mx-10 my-5&quot;&gt;
&lt;p&gt;A React helper hook for scheduling a layout effect with a fallback
to a regular effect for environments where layout effects should not
be used (such as server-side rendering).&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;There is no mention here that &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useEffect&lt;/span&gt;&lt;/code&gt; is a
mere no-op in those situations. It also seems to describe the problem
space somewhat incorrectly — if a given layout effect actually should
not be used in server-side rendering, then the component using it
almost certainly should not be server-side rendered at all. Falling
back to a plain effect in that situation is precisely as incorrect as
using a layout effect — only without a warning to guide you toward the
correct solution.&lt;/p&gt;&lt;p&gt;react-use’s &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useIsomorphicLayoutEffect&lt;/span&gt;&lt;/code&gt; hook
has a somewhat more accurate description:&lt;/p&gt;&lt;blockquote class=&quot;mx-10 my-5&quot;&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt; that does not show warning
when server-side rendering, see
&lt;a class=&quot;font-bold underline&quot; href=&quot;https://medium.com/@alexandereardon/uselayouteffect-and-ssr-192986cdcf7a&quot;&gt;Alex Reardon’s article&lt;/a&gt;
for more info.&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;But it also lacks any detail about when it’s appropriate to use this
hook in place of &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt;. And, worse,
on the main README for react-use, the description for the hook reads:&lt;/p&gt;&lt;blockquote class=&quot;mx-10 my-5&quot;&gt;
&lt;p&gt;&lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt; that that [sic] works on
server.&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;Which is not correct. This hook, like all other “isomorphic” layout
effect hooks, has exactly the same behavior as
&lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt;, minus the warning. It does
not work on the server!&lt;/p&gt;&lt;/section&gt;&lt;section id=&quot;takeaways&quot; class=&quot;flex flex-col gap-4 text-base md:text-xl&quot;&gt;&lt;p&gt;&lt;span class=&quot;decoration-green text-lg font-bold underline underline-offset-8 md:text-2xl&quot;&gt;I may be reading far too much into this very scant story&lt;/span&gt;, but I
began to see a narrative unfold the further I looked into this:&lt;/p&gt;&lt;p&gt;A maintainer for a very popular open source library, in the midst of a
big refactor, made an essentially arbitrary decision to work around a
noisy warning that wasn’t relevant to their use case. They seem to
have done this with full knowledge that their decision was arbitrary,
and left a comment explaining it.&lt;/p&gt;&lt;p&gt;Another maintainer for a similarly popular open source library also
needed to work around the warning, which was similarly irrelevant to
their use case. They saw this workaround and decided to copy it as-is,
leaving only link to the original (which has since been replaced) as
explanation.&lt;/p&gt;&lt;p&gt;A developer, frustrated by the warning, found these libraries’
workaround and authored a short blog post touting it as a way to quiet
the warning. They seem to at least somewhat misunderstand the purpose
of the warning (or maybe they fully understand it, but didn’t fully
explain), and don’t clarify in their post that the choice of
&lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useEffect&lt;/span&gt;&lt;/code&gt; is essentially arbitrary.&lt;/p&gt;&lt;p&gt;As more developers migrated to use React hooks, more developers ran
into this warning and began searching for solutions. Some of them
published the solution from Reardon’s blog post in their own
libraries, and others found Reardon’s post and implemented his
approach themselves.&lt;/p&gt;&lt;p&gt;At each step in the saga, there’s less and less context. Even though
the warning itself links to a GitHub Gist that explains the issue and
solutions quite well, searching the language of the warning will
retrieve Reardon’s post and other solutions before the linked Gist
from the React team.&lt;/p&gt;&lt;p&gt;As a result, the de facto solution to this “problem” doesn’t have
sufficient context for users to understand how to use it effectively.
The hugely popular
&lt;a class=&quot;font-bold underline&quot; href=&quot;https://www.npmjs.com/package/react-select&quot;&gt;React-Select library&lt;/a&gt;, for example,
&lt;a class=&quot;font-bold underline&quot; href=&quot;https://github.com/JedWatson/react-select/blob/53b85346bb7defd937257b0daf9d6993ef20a59a/packages/react-select/src/components/Menu.tsx#L335-L364&quot;&gt;incorrectly uses use-isomorphic-layout-effect&lt;/a&gt;
to position and scroll a menu, when it should instead avoid rendering
the menu on the server at all. And I’m not trying to pick on
React-Select — it seems likely that this is almost never an actual bug
for them, since menus are likely always collapsed during the server
render. But that is precisely the use case that the React team had in
mind when they added the &lt;code&gt;&lt;span style=&quot;color:#24292F&quot;&gt;useLayoutEffect&lt;/span&gt;&lt;/code&gt;
warning!&lt;/p&gt;&lt;p&gt;To me at least, this is a reminder of why it’s important to understand
&lt;em&gt;why&lt;/em&gt; our code does what it does. It can be tempting to sit
back and let sleeping dogs lie after finally finding the solution to a
confounding bug. But it’s all too easy for those incomplete
understandings to build up and slowly shift our intuition over time,
until we find that our mental model of our problem space doesn’t match
reality any longer.&lt;/p&gt;&lt;p&gt;Oh, and React ProseMirror doesn’t trigger the layout effect warning
during server-side rendering anymore!&lt;/p&gt;&lt;/section&gt;&lt;/main&gt;
    </content>
  </entry>

</feed>
