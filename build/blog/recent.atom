<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Handle with Care Blog - Recent Posts</title>
  <author>
    <name>Handle with Care Collective</name>
    <uri>https://handlewithcare.dev</uri>
  </author>
  <icon>https://handlewithcare.dev/favicon.ico</icon>
  <id>https://handlewithcare.dev/blog/recent.atom</id>
  <updated>2025-07-02T04:00:00.000Z</updated>
  <link href="https://handlewithcare.dev/" />
  <link href="https://handlewithcare.dev/blog/recent.atom" rel="self" />
  <entry>
    <title type="text">Why I rebuilt ProseMirror’s renderer in React</title>
    <id>https://handlewithcare.dev/blog/why_i_rebuilt_prosemirror_view/</id>
    <updated>2025-02-06T05:00:00.000Z</updated>
    <published>2025-02-06T05:00:00.000Z</published>
    <link href="https://handlewithcare.dev/blog/why_i_rebuilt_prosemirror_view/" />
    <author>
      <name>Shane Friedman</name>
      <uri>https://handlewithcare.dev/#Shane Friedman</uri>
    </author>
    <summary type="text">For the past year and a half, I’ve been re-writing the renderer for ProseMirror, the popular rich text editing library. This new renderer has finally been marked as stable and published as part of @handlewithcare/react-prosemirror, a library that integrates React and ProseMirror. Here’s a very deep dive into the journey I took, and why it led me where it did!</summary>
    <content type="html" xml:lang="en" xml:base="http://handlewithcare.dev/blog/why_i_rebuilt_prosemirror_view/">
      
    </content>
  </entry>

  <entry>
    <title type="text">There’s no such thing as an isomorphic layout effect</title>
    <id>https://handlewithcare.dev/blog/no_such_thing_isomorphic_layout_effect/</id>
    <updated>2025-02-22T05:00:00.000Z</updated>
    <published>2025-02-22T05:00:00.000Z</published>
    <link href="https://handlewithcare.dev/blog/no_such_thing_isomorphic_layout_effect/" />
    <author>
      <name>Shane Friedman</name>
      <uri>https://handlewithcare.dev/#Shane Friedman</uri>
    </author>
    <summary type="text">There’s something off about the most popular approach to quieting React’s warnings about using layout effects during server-side rendering. Let’s break down why the warning exists, and when it really makes sense to disable it without actually addressing it.</summary>
    <content type="html" xml:lang="en" xml:base="http://handlewithcare.dev/blog/no_such_thing_isomorphic_layout_effect/">
      
    </content>
  </entry>

  <entry>
    <title type="text">Tech Debt as Product Strategy</title>
    <id>https://handlewithcare.dev/blog/tech_debt_as_product_strategy/</id>
    <updated>2025-07-02T04:00:00.000Z</updated>
    <published>2025-07-02T04:00:00.000Z</published>
    <link href="https://handlewithcare.dev/blog/tech_debt_as_product_strategy/" />
    <author>
      <name>Morgan Cohn</name>
      <uri>https://handlewithcare.dev/#Morgan Cohn</uri>
    </author>
    <summary type="text">Most teams treat technical debt as inevitable maintenance rather than strategic investment—but this approach fails because not all debt is created equal. Let's break down a framework for evaluating tech debt decisions with the same rigor as feature development.</summary>
    <content type="html" xml:lang="en" xml:base="http://handlewithcare.dev/blog/tech_debt_as_product_strategy/">
      
    </content>
  </entry>

</feed>
